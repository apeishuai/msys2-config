<p>一般构建在线翻译插件的方法主要有两个， 申请官方 API Key 或者破解其协议， 但是缺点很明显：</p>
<ol>
  <li>基于官方 API: 每个用户都需要单独申请 API Key， 使用门槛高， 而且免费版有诸多限制</li>
  <li>破解 JS API： 开发门槛高， 每次都要详细抓包分析， 猫和老鼠的游戏， 累</li>
</ol>

<p>还有第三种方式， 就是用 <a href="https://pptr.dev">Puppeteer</a> 这个库来获取在线翻译的结果， 这种技术的优点是：</p>
<ol>
  <li>免费使用： 因为每个在线服务商都会提供官方自己的免费翻译页面， Puppeteer 本质就是运行一个正常的浏览器来加载翻译网页， 在线服务商无法区分是机器人还是真实用户在访问页面</li>
  <li>没有使用限制： 只要官方的翻译页面可以运行， 不需要 API Key， 我们的代码也不会发生访问次数或查询内容等限制</li>
  <li>修改门槛低： Puppeteer 主要是通过前端 DOM 查询找到对应的 Element 后执行操作， 服务商即使改页面后， 我们也可以在 5 分钟之内就改好 Element 对应的定位属性</li>
</ol>

<p>下面是 Deno 和 Puppeteer 结合的代码示例:</p>

<h4 id="deeplts">DeepL.ts</h4>
<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">puppeteer</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">https://deno.land/x/pptr@1.2.0/mod.ts</span><span class="dl">"</span><span class="p">;</span>

<span class="c1">// 启动浏览器</span>
<span class="kd">const</span> <span class="nx">browser</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">puppeteer</span><span class="p">.</span><span class="nx">launch</span><span class="p">({</span>
    <span class="na">executablePath</span><span class="p">:</span> <span class="dl">'</span><span class="s1">/usr/bin/google-chrome-stable</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">headless</span><span class="p">:</span> <span class="kc">true</span>              <span class="c1">// 设置成 false 可以用于调试</span>
<span class="p">});</span>
<span class="c1">// 创建一个网页</span>
<span class="kd">const</span> <span class="nx">page</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">browser</span><span class="p">.</span><span class="nx">newPage</span><span class="p">();</span>

<span class="c1">// 加载 DeepL 官方翻译页面</span>
<span class="k">await</span> <span class="nx">page</span><span class="p">.</span><span class="nx">goto</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.deepl.com/translator</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// 初始化翻译的内容</span>
<span class="kd">const</span> <span class="nx">content</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">测试一下在线翻译服务</span><span class="dl">"</span>

<span class="c1">// 清空页面右侧翻译结果的输入内容</span>
<span class="k">await</span> <span class="nx">page</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="dl">'</span><span class="s1">.lmt__target_textarea</span><span class="dl">'</span><span class="p">,</span> <span class="nx">el</span> <span class="o">=&gt;</span> <span class="nx">el</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="dl">''</span><span class="p">)</span>
    
<span class="c1">// 将需要翻译的内容填充至页面左侧输入框内, 但是如果只是设置 value 不一定会触发 change 信号, 所以下一步很关键</span>
<span class="k">await</span> <span class="nx">page</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="dl">'</span><span class="s1">.lmt__source_textarea</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">el</span><span class="p">,</span> <span class="nx">content</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
   <span class="nx">el</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">content</span>
<span class="p">},</span> <span class="nx">content</span><span class="p">)</span>
    
<span class="c1">// 在页面左侧输入框内按一下回车， 以触发 change 信号发送翻译请求</span>
<span class="k">await</span> <span class="nx">page</span><span class="p">.</span><span class="kd">type</span><span class="p">(</span><span class="dl">'</span><span class="s1">.lmt__source_textarea</span><span class="dl">'</span><span class="p">,</span> <span class="dl">"</span><span class="se">\n</span><span class="dl">"</span><span class="p">)</span> 

<span class="c1">// 等待右边输入框内容发生变化后， 获取其翻译结果</span>
<span class="k">await</span> <span class="nx">page</span><span class="p">.</span><span class="nx">waitForFunction</span><span class="p">(</span><span class="dl">'</span><span class="s1">document.querySelector(".lmt__target_textarea").value != ""</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">translation</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">page</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="dl">"</span><span class="s2">.lmt__target_textarea</span><span class="dl">"</span><span class="p">,</span> <span class="nx">el</span> <span class="o">=&gt;</span> <span class="nx">el</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">trim</span><span class="p">())</span>

<span class="c1">// 打印翻译结果</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">translation</span><span class="p">)</span>
</code></pre></div></div>

<p>执行就使用 <code class="language-plaintext highlighter-rouge">deno run -A --unstable DeepL.ts</code> 命令， 简单吧？</p>

<p>需要注意的是 <code class="language-plaintext highlighter-rouge">page.goto</code> 加载需要时间， 如果你需要多次查询翻译内容， 需要做如下处理：</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="nx">page</span><span class="p">.</span><span class="nx">url</span><span class="p">()</span> <span class="o">!==</span> <span class="dl">"</span><span class="s2">https://www.deepl.com/translator</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">await</span> <span class="nx">page</span><span class="p">.</span><span class="nx">goto</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.deepl.com/translator</span><span class="dl">'</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>这段代码的意思就是如果页面已经加载了， 就不用再重新刷新页面了， 这样第一次以后的请求返回的速度就和你用 API 查询的速度一样快。</p>

<p>我的 Emacs 插件 <a href="https://github.com/manateelazycat/insert-translated-name">insert-translated-name</a> 就用了类似的技术去实现， 在国内可以流畅的使用 DeepL 的翻译服务。</p>
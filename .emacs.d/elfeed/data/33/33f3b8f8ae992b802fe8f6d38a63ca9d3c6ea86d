
<p>AI 时代早已经来临，但是很多人还喜欢在说 AI 好像没有什么用处。我觉得这是很短视的。当社会的每一个普通人都感觉到 AI 的价值时候，你已经没有任何机会了。</p>



<span id="more-27245"></span>



<p><strong>汽车时代</strong></p>



<p>就像卡尔本茨，也就是奔馳的创始人。卡尔本茨发明汽车的时候，其实世界上很多机械师，都在做类似的事情，在自己家的院子里面捣鼓。当汽车刚刚兴起的时候，创建一家汽车工厂也没今天想象的那么难。但是今天就完全不同了，海量的投资，才能创办一家汽车公司。就算有海量的投资，你也不见得可以成功。</p>



<p><strong>iOS 时代</strong></p>



<p>再比如，09年苹果发布iOS SDK，到12-15 年之前，iOS 程序员都非常紧俏。一个普通学校的大学生毕业在上海，比如可以找到4000-6000的普通文员的工作，会写程序也许可以到8000，毕业前自学 iOS 开发，会写 iOS 底薪就直接12000了。</p>



<p>在这个阶段，我都是大力在推动中国 iOS 开发的一个人。为什么要推动呢，就是因为还有很多人看不到这一点。</p>



<p>虽然当时 iPhone 已经很火了，大家都在买，各种安卓也出来了，大家都在买。但是很多人看不到移动开发的价值，觉得手机开发怎么可能会成为一个非常的重要场景呢？屏幕那么小，打字那么不方便，等等问题，人们真的会在手机上买超过50块钱的东西么？安全么？</p>



<p>但到了今天，你就不会这么说了。</p>



<p>我们打车都离不开滴滴了，我们买东西都离不开美团和饿了么。这些东西其实都是有了手机才会有的。我们就不用再提什么快手、抖音等等等等。</p>



<p>今天程序员都要再重新思考，为什么计算机没有占领这个世界。计算机的保有量和手机的保有量是完全不可比拟的。在中国比如可能有一亿台电脑，但是可能有十几亿台手机。手机是人手一个的，电脑可能是十分之一的人才会有的东西。</p>



<p>在今天这个时间点，当你还在抱怨说 AI 好像没有影响我的生活的时候，其实才是 AI 真正有机会的时候。如果你稍微视角广泛一点，你就应该已经知道 AI 已经在影响我们的生活。</p>



<p><strong>AI 字幕</strong></p>



<p>比如，我们做 YouTube 视频的人，有些人是挂字幕，有些人不挂。</p>



<p>我们之前挂字幕最常见的方法，就是去科大讯飞。讯飞有一个网站叫讯飞听见。在那个平台上，我们可以把我们的视频对应的 MP3 传上去。然后得到一个字幕文件，或者得到一个转写文件。比方说，我有时候会把我自己录的一期视频形成一个转写的文本文件。然后我再把这个文本文件润色一下，然后放到我公众号上，再发一篇文章，做到一鱼两吃。就是有一个视频再变成一篇文章。几十分钟的视频转成文字，可能要收 10-40 块钱，这是 AI 自动识别。如果你要求人工再校对一下，那么就变成了 100-200 块钱了。</p>



<p><strong>PPT 自动布局</strong></p>



<p>再比如，我年轻的时候做 PPT 都是用 Powerpoint ，等到我开始用 Mac 以后，我就用 Keynote。我觉得 Keynote 的风格更加的干净、简洁。</p>



<p>可是前两年，我发现 Powerpoint 推出一个 AI 自动布局工具，叫做设计灵感。我们是不太喜欢在排版上花时间的人。我做的 PPT 往往都很简单，页面往往就是一个标题，然后堆一个列表。</p>



<p>很多人他会做得非常花里胡哨，他会努力的想办法，把一个列表做得活色生香的，用各种各样的模板。我懒得去干这件事情。</p>



<p>但是我发现 Powerpoint 的这个新功能，设计灵感，很对我的胃口。我还是像以前一样，“一个标题，然后堆一个列表”，然后一点设计灵感，在它根据我的内容，模版，等信息推荐的一堆不同花色，样式的布局里面随便选一个就好了。非常方便。</p>



<figure class="wp-block-image size-large"><img decoding="async" loading="lazy" width="1024" height="902" src="https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-22.33.55-1024x902.png" alt="" class="wp-image-27247" srcset="https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-22.33.55-1024x902.png 1024w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-22.33.55-300x264.png 300w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-22.33.55-768x677.png 768w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-22.33.55-1200x1057.png 1200w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-22.33.55.png 1430w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>发现了这个功能以后，我基本上就都在用 Powerpoint 了。我就觉得 Keynote 没有这个功能，对我来说非常不好用了。这就是 AI 对我们的改变。</p>



<p><strong>Grammarly&nbsp;拼写检查、校正</strong></p>



<p>再比如，我有大量写英文邮件的需求。我对语法和拼写没那么在乎。以前写的英文邮件是有大量的语法错误，is、has、名次单复数之类的。当然读邮件的对方都是老外，他们并不在乎，不会回信说你写的语法错误很多，单复数用错了之类的。</p>



<p>但有的时候也会因为写得太过潦草，引起一些误解。结果对方要写邮件来问，某句话，到底是啥意思。遇到这种情况，我只能再认真地写一遍。</p>



<p>后来，三年到五年前，我听说了 Grammarly 。这是基于 AI 的拼写检查软件，比Word里头默认的拼写检查效果好得多。我用 Grammarly 以后，我就发现我写出来的英文邮件还是相当像样子的。它可以提供大量的修改意见。包括标点符号，包括一些用词，单复数，Chinglish的用词，它可能会建议你去掉或者给你换一个。或者你连续用了五个sometime，它可能会给你换一个，这样显得这个句子，这一段话没有那么重复等等。它会做很多这样的工作，对我就很有意义。</p>



<p><strong>ChatGPT 文本润色</strong></p>



<p>最近出了<a href="https://codechina.org/2023/01/chatgpt-ai-human-principle-and-limitation/">ChatGPT</a>。我自己遇到的一个例子是，我在App Store上提交一个App，被拒绝了。我写了一个大概意思的回复，然后交给 ChatGPT 去润色成更商务，更专业的回信。结果很快我的 App 就通过审核了。</p>



<p><strong>ChatGPT AppStore 文案生成</strong></p>



<p>我最近提交了两个App，第一个App花了我两个月的时间，当然第一个App可能要打样，做很多基础的工作，因为好久没写代码了，包括恢复一些代码习惯。</p>



<p>而第二个App我只花了两天，第一个原因是因为这两个App很接近，所以有很多代码是可以通用的；第二个原因是因为在App Store上填表是非常辛苦的，因为你发一个App，得写App Name、Promote text、Description、keyword有一大堆你要填的文案性的东西，这些都很烦，都费脑子。平时做好一个App还需要一两天才能折腾好文案的问题，这还是只支持单一语言的前提下。</p>



<p>而这次这些工作，我都交给ChatGPT，文案工具十几分钟就全搞定了。</p>



<p>具体做法是，比如我做的这个App是一个Note，Description怎么来？</p>



<p>我就跟ChatGPT说：&#8221;<strong>I made a iOS note app，name is Easy Note, Please help me generate  App Store description.</strong>&#8220;（也可以用中文提要求，但是建议都试试，看具体问题，有些时候用中文提效果好。）</p>



<p>然后它光光给你写，输出的时候，你会发现，它会自动根据App name Easy Note，去帮你吹嘘这东西用起来很方便好用:</p>



<blockquote class="wp-block-quote">
<p>Make life easier with Easy Note! Keeping track of important information has never been easier. With Easy Note, you can quickly jot down notes, ideas, and to-dos without the hassles of pen and paper. Create, store, and organize notes with just a few taps! Keep your thoughts safe and secure in one easy-to-use app. With Easy Note, you can get organized today!</p>
</blockquote>



<p>但是比如，我发现因为我没提，他也没猜到这个 Note 可以用来写日记。那么，我可以修改我的提示，改成&#8221;<strong>I made a iOS note app，name is Easy Note, you can use it to take note, or write diary, Please help me generate  App Store description.</strong>&#8220;。</p>



<p>结果如下：</p>



<blockquote class="wp-block-quote">
<p>Take control of your notes with Easy Note! Our app makes it easy for you to store, organize, and access all your notes and&nbsp;<strong>diary</strong>&nbsp;entries. With a clean, intuitive interface and powerful organizational tools, Easy Note is the perfect companion for the busy professional or student who needs to keep their notes organized and accessible. Take control of your notes today with Easy Note!</p>
</blockquote>



<p>这个工作我本来可能要花个一两天才能搞定。因为这跟写程序不一样，这没有确定性。用了这个方法一会儿就能搞定了。如果写出来的不合心意，调整下提示，再试试往往就很好了，还可以自己修改一些不喜欢用词。</p>



<p><strong>You are not young&#8230; but with age comes wisdom我们不再年轻，年龄的增长带来的是智慧</strong></p>



<p>标题这句话其实是憨豆特工里面的一句台词，师傅告诉憨豆，你已经不再年轻，但是年龄的增长带来的是智慧。于是憨豆走到了比武的师弟身后，用锣棰一击打到师弟，赢得了比武。</p>



<figure class="wp-block-image size-large"><img decoding="async" loading="lazy" width="1024" height="473" src="https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-23.27.14-1024x473.png" alt="" class="wp-image-27249" srcset="https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-23.27.14-1024x473.png 1024w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-23.27.14-300x138.png 300w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-23.27.14-768x355.png 768w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-23.27.14-1536x709.png 1536w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-23.27.14-1200x554.png 1200w, https://codechina.org/wp-content/uploads/2023/01/截屏2023-01-16-23.27.14.png 1564w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>这也是引发我的一个思考。</p>



<p>首先，我已经43岁了，我跟我年轻时代最大的区别，就是我年轻的时候，其实也不知道在写什么代码，也不知道写的代码能不能<a href="https://codechina.org/category/makemoney/" data-internallinksmanager029f6b8e52c="1" title="如何赚钱">挣钱</a>，但是有无穷无尽的精力。</p>



<p>大学的时候，我天天通宵在写代码，我精力充沛，甚至可以连轴转写一个星期的代码，天天通宵不睡。但我现在43岁了，身体也不是特别好，我是不可能熬夜的。我确实也不熬夜了，到了12点就睡了。每天早晨8点半一定起床。有人可能觉得我起的不够早，但是我是自由职业者，大多数人自由职业以后，无人管束以后，根本不能保证早上按时起床。我可以做到。</p>



<p>我不可能像那么有精力，但又有很多事要干：我得写公众号，我得做视频，我还得写代码。这三样任何一样，干好的人都不多，但是我三样都想干好他，所以我有很多事。</p>



<p>这就是第一个问题：<strong>年纪大了，你的精力其实没年轻人那么好。</strong></p>



<p><strong>开源时代</strong></p>



<p>第二个点就是这个时代，我觉得变化非常之大。</p>



<p><strong>不要全部亲力亲为，多用开源组件</strong></p>



<p>我们年轻的时候，总觉得什么都想自己做。但那个时候也是有原因的，那个时间点，开源、AI 都没有现在这么成熟。很多东西都需要自己亲手去做，所以，在我们年强的时候，鄙视链的顶端是什么都能自己做的人。</p>



<p>后来，我发现需要改变思路。因为，我发现，我自认为是个老手了，但是我想做一些事，可是一个月也没能做出来。</p>



<p>但是做类似的事情，一些年轻人做得很快，几天就出产品了。这些年轻人，有些甚至是产品经理，或刚从其他行业转行的年轻人。他们几乎没有多少编程经验，但是做的东西却相当不错。他们大量地使用开源的现成的东西。</p>



<p>我们这种老程序员却有一个执念，感觉大量的用开源的现成的东西不够酷。如果真的要用一个开源库，我能不能给他调整下性能，优化一下，让它速度变快10倍，这样我们才会觉得我们在做事情。</p>



<p><strong>聚焦小问题，控制问题空间不要膨胀</strong></p>



<p>优秀的年轻人，特别是我观察到的一些现在做独立开发的年轻人，他们有一个优点。他们聚焦在某一个小问题上。不像我，我总是想把一个非常复杂的问题解决。所以，我设计的产品就会很复杂，用户用起来也很复杂，但同时它不见得有销量。</p>



<p>比方说，英语轻松读其实是一个非常复杂的APP，我们已经可能有1万几千行的代码了，然后还没有满足我对一个完美的学习英语的APP的一个预期，但实际上可能英语轻松读的非常小的一个功能，单独做成个APP可能还能卖得更好，但是这是未来我们去考虑的问题，但是今天我还没时间去拆解代码。英语轻松读的代码太复杂了。</p>



<p><strong>如何应对 AI 和开源时代，做好独立开发者</strong></p>



<p>这也是一个反思：在AI时代和开源时代，我们怎么去做个独立开发者?</p>



<p>再举个例子，今天比方理解ChatGPT，可能我是稍微还是比较懂行的。从还没有深度学习的时候，我就做过机器学习的学习和研究。我做过很多的探索，但是都没达到我的要求，所以我就没有做产品出来。</p>



<p>我当时在做搜索的时候，其实我对各种机器学习是非常感兴趣的，到了深度学习出来以后，我也做了很多尝试，但是都没形成产品。这两年我一直在考虑这个问题。</p>



<p><strong>到了 GPT3 / ChatGPT 这个时代，我们独立开发者能做什么？</strong></p>



<p><a href="https://codechina.org/2023/01/chatgpt-ai-human-principle-and-limitation/">可能很多人理解不了ChatGPT这种东西，它是怎么炼成的？我也曾做过一期视频，写过文章。</a>可能很多人理解不了的就是，这个东西做一个成本之高是不可想象的，它其实非常复杂。</p>



<p>比方说GPT就很复杂，它要收集全世界无数的资料。我记得上次做那个视频的时候，提到过GPT3，它用了1700万亿的词语，这么大的一个语料库是普通人根本就没有能力收集到的，语料库可能就得有几个T。甚至可能要上P。有可能1T、2T的硬盘，可能就要用几千个。就是这样的一个数据规模。</p>



<p>这样的数据规模，我们家用的机器是没办法处理。我有一台游戏本，3060的显卡。它可以跑起来一些比较小的，深度学习的项目。也可以用来训练一些比较简单的AI模型，它的性能是够的。</p>



<p>但是你如果像训练GPT这种东西，家用游戏本远远不够。你可能需要无数的、最先进的NVIDIA的显卡。而且，你还需要几千个、甚至上万个这样的高端下卡的集群，才能去把复杂的AI模型快速的训练出来。这些设备很昂贵，不管你是租云的还是你自己买，OpenAI应该是租云的，我不知道具体租了谁的云，或者是他自己建的服务器，他还要做几个月上，或者半年以上，或者一年的这种训练。&nbsp;</p>



<p>这些团队，还需要一些性能高手，因为这么复杂的一个任务，只要你能在流程上，性能上做一点点提升，都能省不少的钱。</p>



<p>所以呢，在今天我们会发现，引领AI时代的往往是一些特别大的公司，像OpenAI、苹果、Google、微软，因为他们有财力、物力和人力去做这些事情，去探索这些东西。</p>



<p>那么，我们作为一个普通个人，或者是小的团队，在这个 AI 时代，在这个开源时代，我们能做的事情大量的，就只能利用各种开源的库，开源的 AI 模型来做产品。</p>



<p>但是幸运在于，经过了这么多年积累，有很多开源的AI模型，它们在表现上，甚至比一些收费的API或者收费的模型还要强。</p>



<p>举个例子，OpenAI 公司，在2022年8月，推出了一款叫做Whisper的产品，这个名字很像 George Michael 的一首歌曲叫做Careless Whisper（无声细语），很好听。OpenAI 的 Whisper 实际上是非常厉害，但是使用起来很简单的，开源的字幕和语音识别软件。</p>



<p>使用的时候，你就把一个MP3给它，用一条命令，就可以生成一个带时间戳的字幕，以及一个全文文本。效果到什么程度呢？</p>



<p>Whisper 是一个支持 44 种语言的开源工具，不是给汉语专门优化的产品，但是我测试过，它的中文识别水平是完全不次于科大讯飞的，也就是它的技术潜力是远远超越科大讯飞的。而且它还是开源的，纯免费的。</p>



<p>在我的 M1Max 笔记本上，因为目前官方代码还不支持 苹果的M1 架构加速，只支持 M1 的CPU，所以很慢，生成字幕可能要几十分钟甚至一个小时。但是我还有台 Windows 游戏本，用它只需要几分钟，游戏本是 N 卡支持Cuda。用起来比科大讯飞要慢一点，而科大讯飞用服务器做的，服务器的性能比较好。但是，Whisper 可以让我们用家用电脑，免费获得科大讯飞这种商用产品类似的效果，这非常让人兴奋。</p>



<p>这就是这个时代。</p>



<p>在App Store上，其实已经有用 OpenAI Whisper 做的那种英语的速记软件。这个开源的模型提供了很多模型，Tiny、Small、medium、Big，就是说这个就是模型尺寸，模型尺寸越大效果越好，但是 Small 这种或者 Tiny 这种只能识别英语。到了 medium，它就可以识别英语、中文、各种语言了，多语言识别了。</p>



<p>而只有 Tiny 这样的小模型，才能在 iPhone 这么一个比较小的受限环境运行起来。所以有人拿它的 Tiny 版本，做了英语的速记软件，英语的识别效果相当的不错，不次于很多大公司的类似产品。</p>



<p>这个 App 我应该也写得出来，但那可能是一招鲜的东西。反正你知道，已经有人在干这个事情了。你在 App Store搜索，也会发现很多 ChatGPT 和 GPT 相关的App。</p>



<p>在这个时代，你可能可以用一个收费的API，或者是一个开源的AI模型，去做一个相当不错的商业产品。产品的效果很好，然而不需要你从头研究一切技术细节。</p>



<p>当然这中间，需要你学会去筛选。你可以找到各种开源的库，各种开源或免费的 AI 模型。你能在里面找到最合适的，甚至你可以比较简单的进行一些优化，达到一个产品级的水平，那么你就可以做很多事情。</p>



<p>所以，在今天这个 AI 时代和开源时代，我觉得我也要转变一个思路。</p>



<p>作为一个老年程序员，我们以前总是想自己写，而在这个时代，我有可能要追求不是写代码的乐趣，而是解决问题的乐趣——通过组合各种开源的东西，不光是AI的开源，还有一些别的库和工具包，都在Github上可以找到。</p>



<p>我的开发能力很强，比如我可以通过手写转化的方式，把一些用Python写的开源库，变成一个iOS的库。就像我最早做有道词典的时候，有道词典给了我一个Java的词典内核，于是我写了几天几夜，把它翻译成了iOS的Cocoa代码。</p>



<p>就是要追求多快好省地写程序，首先就要尽量减少开发量，运用开源的东西，AI技术以及胶水代码，可以提高战斗力和执行能力。如果独立开发一年可以达到100万收入，可以考虑雇佣助手或合作伙伴，只要一年可以有几百万收入，我就可以让 Sycx 老师跟自己一起来做事情了。但是在今天，我是没有任何财力去雇个人来帮我的，所以要大量的用 AI 做我的文案助手，我的代码助手。</p>



<p><strong>我为什么不接外包</strong></p>



<p>不接外包的原因，我简单一点说。不是不能接外包，但是在我看来，做外包的事情太浪费时间了，中间最大的问题都在沟通成本上。如果高效的做外包，一是要有稳定的业务来源，二是我认为做外包，你就必须得是非常专业化的。</p>



<p>在某个领域，比如是做财务软件的外包，是做企业管理，是做进销存，你在某个特定的领域去做深耕。</p>



<p>然后，如果第一个客户是做进销存，第二个还做进销存，只不过稍微改吧改改去应对它的需求，或者说你只做某一个大进销存软件的二次开发，这样的外包还可以做。</p>



<p>如果是撒开了，什么外包我都接，是非常痛苦的，我认为是没法做的。当然也有一些很聪明的人，他也是大量用各种开源胶水组合起来，然后去接外包。但是这个不是我想干的事情，就是需要大量的去沟通。</p>



<p><strong>为什么选择自由职业</strong></p>



<p>以我目前的状态来说，如果我去上班，仍旧是可以比我现在做的这些事情挣得更多。</p>



<p>但我一直在追求一个，你叫它退休也好，或者叫它自由状态也好。就是我几乎不需要跟人打交道，也不需要跟一个老板去负责。我只需要自己做事情，就可以挣到钱。这些往往是通过一个市场，比方说App Store是一个市场，通过微信公众号这么一个平台，其实也是一个市场，或者是通过油管这么一个平台。我把作品、App、视频发布上去。平台自动匹配广告，或者中间有一些广告主来找我，我们私下交流，然后，我就可以获得收入。</p>



<p>一年四季，我不需要我在固定的办公室工作，也不需要我遵守任何一个公司的作息要求，也不需要跟老板低声下气。</p>



<p>就是完全是一个自由自在的状态。当然，之前三年，因为疫情，我没有享受到这个自由自在的状态的好处。在未来疫情彻底结束。并且中国旅游和出国旅游都是比较安全的时候，这种自由自在的状态就会表现出它的威力了。</p>



<p>2023年，我准备去日本旅行一个星期或者一个月。上两次，我去日本旅行，都是待了一两个星期。在这段旅行中，白天可以逛街玩，晚上也可以写代码，不影响工作也不影响学习，甚至在日本逛的时候还可以得到更多的灵感，做更多的视频。</p>



<p>前面说过，我做的所有的工作，比方说写作、做独立开发者、做视频，其实都需要满足这件事：就是我只生产一个内容、只生产一个APP、只生产一个视频，然后把它们扔到市场上去给我换钱。只要这样就能满足，我就不去跟人打交道，我也不去给任何一个人打工。这就是我的一个理想。</p>



<p>虽然这样挣的可能会少一些，但是我的成本也低。因为我完全自由职业，我也不需要住在北京、上海了，我可以住在天津这样的二三线城市，房子便宜，生活成本低。</p>



<p>如果有一天我移民到日本，我不一定要住在东京。我想先在东京住上两年，了解一下日本的大城市，然后再跑到京都或者一个很偏远的乡下，地价便宜的地方住下来，这样我的成本就会低很多。虽然挣的钱不多，但是活的更好，生活压力也会更低，存下来的钱一定多。</p>
<p><a rel="nofollow" href="https://codechina.org/2023/01/ai-age/">如何在 AI 时代、开源时代做一个独立开发者</a>最先出现在<a rel="nofollow" href="https://codechina.org">Tinyfool的个人网站</a>。</p>

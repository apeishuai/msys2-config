<p data-pid="eFtat3NV">在前面的基础上：</p><a href="https://zhuanlan.zhihu.com/p/453139369" data-draft-node="block" data-draft-type="link-card" class="internal">迦非喵：VS2019+hdf5-1.12.1静态编译运行hdf5示例代码</a><a href="https://zhuanlan.zhihu.com/p/453219988" data-draft-node="block" data-draft-type="link-card" class="internal">迦非喵：VS2019+hdf5-1.12.1动态编译运行hdf5示例代码</a><a href="https://zhuanlan.zhihu.com/p/587888831" data-draft-node="block" data-draft-type="link-card" class="internal">迦非喵：Win11+CMake+hdf5+appending to a hdf5 file简单测试</a><p data-pid="nHw1pikW">这里继续重构：</p><p data-pid="e5F0KhEU">在HDF5-1.14.0的HDF5Examples目录下有：</p><figure data-size="normal"><img src="https://pic4.zhimg.com/v2-569b8d87c9ddecbaa810dc4266c98f47_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="765" data-rawheight="364" class="origin_image zh-lightbox-thumb" data-original="https://pic4.zhimg.com/v2-569b8d87c9ddecbaa810dc4266c98f47_r.jpg" referrerpolicy="no-referrer"></figure><p data-pid="zO8NnDrL">CMakeLists.txt</p><div class="highlight"><pre><code class="language-cmake"><span class="nb">cmake_minimum_required</span><span class="p">(</span><span class="s">VERSION</span> <span class="s">3.24</span><span class="p">)</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">project</span> <span class="p">(</span> <span class="s">testprj</span> <span class="p">)</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">set</span> <span class="p">(</span> <span class="s">PRJ_COMPILE_FEATURES</span> <span class="p">)</span><span class="err">
</span><span class="err"></span><span class="nb">set</span> <span class="p">(</span> <span class="s">PRJ_LIBRARIES</span> <span class="p">)</span><span class="err">
</span><span class="err"></span><span class="nb">set</span> <span class="p">(</span> <span class="s">PRJ_INCLUDE_DIRS</span> <span class="p">)</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">list</span> <span class="p">(</span> <span class="s">APPEND</span> <span class="s">PRJ_COMPILE_FEATURES</span> <span class="s">cxx_std_20</span> <span class="p">)</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">find_package</span><span class="p">(</span><span class="s">HDF5</span> <span class="s">REQUIRED</span><span class="p">)</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">if</span> <span class="p">(</span> <span class="s">HDF5_FOUND</span> <span class="p">)</span><span class="err">
</span><span class="err"></span>    <span class="nb">list</span> <span class="p">(</span> <span class="s">APPEND</span> <span class="s">PRJ_LIBRARIES</span> <span class="o">${</span><span class="nv">HDF5_LIBRARIES</span><span class="o">}</span> <span class="p">)</span><span class="err">
</span><span class="err"></span>    <span class="nb">list</span> <span class="p">(</span> <span class="s">APPEND</span> <span class="s">PRJ_INCLUDE_DIRS</span> <span class="o">${</span><span class="nv">HDF5_INCLUDE_DIRS</span><span class="o">}</span> <span class="p">)</span><span class="err">
</span><span class="err"></span><span class="nb">endif</span> <span class="p">()</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">add_executable</span><span class="p">(</span> <span class="o">${</span><span class="nv">PROJECT_NAME</span><span class="o">}</span> 
    <span class="s">h5ex_t_int.c</span>
<span class="p">)</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">target_include_directories</span> <span class="p">(</span> <span class="o">${</span><span class="nv">PROJECT_NAME</span><span class="o">}</span>
    <span class="s">PRIVATE</span> 
        <span class="o">${</span><span class="nv">PRJ_INCLUDE_DIRS</span><span class="o">}</span>
<span class="p">)</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">target_link_libraries</span><span class="p">(</span> <span class="o">${</span><span class="nv">PROJECT_NAME</span><span class="o">}</span> 
    <span class="s">PRIVATE</span> 
        <span class="o">${</span><span class="nv">PRJ_LIBRARIES</span><span class="o">}</span>
<span class="p">)</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="nb">target_compile_features</span> <span class="p">(</span> <span class="o">${</span><span class="nv">PROJECT_NAME</span><span class="o">}</span> 
<span class="s">PRIVATE</span> 
<span class="o">${</span><span class="nv">PRJ_COMPILE_FEATURES</span><span class="o">}</span>
<span class="p">)</span><span class="err">
</span><span class="err">
</span></code></pre></div><p data-pid="9W_pKfUe">h5ex_t_int.c</p><div class="highlight"><pre><code class="language-cpp"><span class="cm">/************************************************************
</span><span class="cm">
</span><span class="cm">  This example shows how to read and write integer datatypes
</span><span class="cm">  to a dataset.  The program first writes integers to a
</span><span class="cm">  dataset with a dataspace of DIM0xDIM1, then closes the
</span><span class="cm">  file.  Next, it reopens the file, reads back the data, and
</span><span class="cm">  outputs it to the screen.
</span><span class="cm">
</span><span class="cm">  This file is intended for use with HDF5 Library version 1.6
</span><span class="cm">
</span><span class="cm"> ************************************************************/</span>

<span class="cp">#include</span> <span class="cpf">"hdf5.h"</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span><span class="cp"></span>
<span class="cp">#define FILE            "h5ex_t_int.h5"
</span><span class="cp">#define DATASET         "DS1"
</span><span class="cp">#define DIM0            4
</span><span class="cp">#define DIM1            7
</span><span class="cp"></span>
<span class="kt">int</span>
<span class="nf">main</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">hid_t</span>       <span class="n">file</span><span class="p">,</span> <span class="n">space</span><span class="p">,</span> <span class="n">dset</span><span class="p">;</span>          <span class="cm">/* Handles */</span>
    <span class="n">herr_t</span>      <span class="n">status</span><span class="p">;</span>
    <span class="n">hsize_t</span>     <span class="n">dims</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="n">DIM0</span><span class="p">,</span> <span class="n">DIM1</span><span class="p">};</span>
    <span class="kt">int</span>         <span class="n">wdata</span><span class="p">[</span><span class="n">DIM0</span><span class="p">][</span><span class="n">DIM1</span><span class="p">],</span>          <span class="cm">/* Write buffer */</span>
                <span class="o">**</span><span class="n">rdata</span><span class="p">,</span>                    <span class="cm">/* Read buffer */</span>
                <span class="n">ndims</span><span class="p">,</span>
                <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>

    <span class="cm">/*
</span><span class="cm">     * Initialize data.
</span><span class="cm">     */</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">DIM0</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">DIM1</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="n">wdata</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">*</span> <span class="n">j</span> <span class="o">-</span> <span class="n">j</span><span class="p">;</span>

    <span class="cm">/*
</span><span class="cm">     * Create a new file using the default properties.
</span><span class="cm">     */</span>
    <span class="n">file</span> <span class="o">=</span> <span class="n">H5Fcreate</span> <span class="p">(</span><span class="n">FILE</span><span class="p">,</span> <span class="n">H5F_ACC_TRUNC</span><span class="p">,</span> <span class="n">H5P_DEFAULT</span><span class="p">,</span> <span class="n">H5P_DEFAULT</span><span class="p">);</span>

    <span class="cm">/*
</span><span class="cm">     * Create dataspace.  Setting maximum size to NULL sets the maximum
</span><span class="cm">     * size to be the current size.
</span><span class="cm">     */</span>
    <span class="n">space</span> <span class="o">=</span> <span class="n">H5Screate_simple</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">dims</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>

    <span class="cm">/*
</span><span class="cm">     * Create the dataset and write the integer data to it.  In this
</span><span class="cm">     * example we will save the data as 64 bit big endian integers,
</span><span class="cm">     * regardless of the native integer type.  The HDF5 library
</span><span class="cm">     * automatically converts between different integer types.
</span><span class="cm">     */</span>
    <span class="n">dset</span> <span class="o">=</span> <span class="n">H5Dcreate</span> <span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">DATASET</span><span class="p">,</span> <span class="n">H5T_STD_I64BE</span><span class="p">,</span> <span class="n">space</span><span class="p">,</span> <span class="n">H5P_DEFAULT</span><span class="p">);</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">H5Dwrite</span> <span class="p">(</span><span class="n">dset</span><span class="p">,</span> <span class="n">H5T_NATIVE_INT</span><span class="p">,</span> <span class="n">H5S_ALL</span><span class="p">,</span> <span class="n">H5S_ALL</span><span class="p">,</span> <span class="n">H5P_DEFAULT</span><span class="p">,</span>
                <span class="n">wdata</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>

    <span class="cm">/*
</span><span class="cm">     * Close and release resources.
</span><span class="cm">     */</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">H5Dclose</span> <span class="p">(</span><span class="n">dset</span><span class="p">);</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">H5Sclose</span> <span class="p">(</span><span class="n">space</span><span class="p">);</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">H5Fclose</span> <span class="p">(</span><span class="n">file</span><span class="p">);</span>


    <span class="cm">/*
</span><span class="cm">     * Now we begin the read section of this example.  Here we assume
</span><span class="cm">     * the dataset has the same name and rank, but can have any size.
</span><span class="cm">     * Therefore we must allocate a new array to read in data using
</span><span class="cm">     * malloc().
</span><span class="cm">     */</span>

    <span class="cm">/*
</span><span class="cm">     * Open file and dataset.
</span><span class="cm">     */</span>
    <span class="n">file</span> <span class="o">=</span> <span class="n">H5Fopen</span> <span class="p">(</span><span class="n">FILE</span><span class="p">,</span> <span class="n">H5F_ACC_RDONLY</span><span class="p">,</span> <span class="n">H5P_DEFAULT</span><span class="p">);</span>
    <span class="n">dset</span> <span class="o">=</span> <span class="n">H5Dopen</span> <span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">DATASET</span><span class="p">);</span>

    <span class="cm">/*
</span><span class="cm">     * Get dataspace and allocate memory for read buffer.  This is a
</span><span class="cm">     * two dimensional dataset so the dynamic allocation must be done
</span><span class="cm">     * in steps.
</span><span class="cm">     */</span>
    <span class="n">space</span> <span class="o">=</span> <span class="n">H5Dget_space</span> <span class="p">(</span><span class="n">dset</span><span class="p">);</span>
    <span class="n">ndims</span> <span class="o">=</span> <span class="n">H5Sget_simple_extent_dims</span> <span class="p">(</span><span class="n">space</span><span class="p">,</span> <span class="n">dims</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>

    <span class="cm">/*
</span><span class="cm">     * Allocate array of pointers to rows.
</span><span class="cm">     */</span>
    <span class="n">rdata</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">**</span><span class="p">)</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">dims</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="k">sizeof</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">));</span>

    <span class="cm">/*
</span><span class="cm">     * Allocate space for integer data.
</span><span class="cm">     */</span>
    <span class="n">rdata</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">dims</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">dims</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="k">sizeof</span> <span class="p">(</span><span class="kt">int</span><span class="p">));</span>

    <span class="cm">/*
</span><span class="cm">     * Set the rest of the pointers to rows to the correct addresses.
</span><span class="cm">     */</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">dims</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">rdata</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">rdata</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">i</span> <span class="o">*</span> <span class="n">dims</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>

    <span class="cm">/*
</span><span class="cm">     * Read the data.
</span><span class="cm">     */</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">H5Dread</span> <span class="p">(</span><span class="n">dset</span><span class="p">,</span> <span class="n">H5T_NATIVE_INT</span><span class="p">,</span> <span class="n">H5S_ALL</span><span class="p">,</span> <span class="n">H5S_ALL</span><span class="p">,</span> <span class="n">H5P_DEFAULT</span><span class="p">,</span>
                <span class="n">rdata</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>

    <span class="cm">/*
</span><span class="cm">     * Output the data to the screen.
</span><span class="cm">     */</span>
    <span class="n">printf</span> <span class="p">(</span><span class="s">"%s:</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">DATASET</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">dims</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span> <span class="p">(</span><span class="s">" ["</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">dims</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="n">printf</span> <span class="p">(</span><span class="s">" %3d"</span><span class="p">,</span> <span class="n">rdata</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
        <span class="n">printf</span> <span class="p">(</span><span class="s">"]</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="cm">/*
</span><span class="cm">     * Close and release resources.
</span><span class="cm">     */</span>
    <span class="n">free</span> <span class="p">(</span><span class="n">rdata</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
    <span class="n">free</span> <span class="p">(</span><span class="n">rdata</span><span class="p">);</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">H5Dclose</span> <span class="p">(</span><span class="n">dset</span><span class="p">);</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">H5Sclose</span> <span class="p">(</span><span class="n">space</span><span class="p">);</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">H5Fclose</span> <span class="p">(</span><span class="n">file</span><span class="p">);</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p data-pid="_nee4ArI">windows11+powershell</p><p data-pid="u2yE2oVS">$env:HDF5_DIR = "c:/dev/HDF_Group/HDF5/1.14.0/cmake/"</p><p data-pid="7gEKZuI-"> $env:path += ";C:/dev/HDF_Group/HDF5/1.14.0/bin/"</p><div class="highlight"><pre><code class="language-text">PS D:\work\hdf5_work\ModernHDF5\codes\HDF5Examples\H5T\h5ex_t_int\01\build&gt; $env:HDF5_DIR = "c:/dev/HDF_Group/HDF5/1.14.0/cmake/"
PS D:\work\hdf5_work\ModernHDF5\codes\HDF5Examples\H5T\h5ex_t_int\01\build&gt; $env:path += ";C:/dev/HDF_Group/HDF5/1.14.0/bin/"</code></pre></div><p data-pid="y6n_oHwF">cmake ..</p><div class="highlight"><pre><code class="language-text">PS D:\work\hdf5_work\ModernHDF5\codes\HDF5Examples\H5T\h5ex_t_int\01\build&gt; cmake ..
-- Building for: Visual Studio 17 2022
-- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.22621.
-- The C compiler identification is MSVC 19.33.31630.0
-- The CXX compiler identification is MSVC 19.33.31630.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.33.31629/bin/Hostx64/x64/cl.exe - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.33.31629/bin/Hostx64/x64/cl.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found HDF5: hdf5::hdf5-shared (found version "1.14.0")
-- Configuring done
-- Generating done
-- Build files have been written to: D:/work/hdf5_work/ModernHDF5/codes/HDF5Examples/H5T/h5ex_t_int/01/build</code></pre></div><p data-pid="YMD2M_It">cmake --build .</p><div class="highlight"><pre><code class="language-text">PS D:\work\hdf5_work\ModernHDF5\codes\HDF5Examples\H5T\h5ex_t_int\01\build&gt; cmake --build .
MSBuild version 17.3.1+2badb37d1 for .NET Framework
  Checking Build System
  Building Custom Rule D:/work/hdf5_work/ModernHDF5/codes/HDF5Examples/H5T/h5ex_t_int/01/CMakeLists.txt
  h5ex_t_int.c
  testprj.vcxproj -&gt; D:\work\hdf5_work\ModernHDF5\codes\HDF5Examples\H5T\h5ex_t_int\01\build\Debug\testprj.exe
  Building Custom Rule D:/work/hdf5_work/ModernHDF5/codes/HDF5Examples/H5T/h5ex_t_int/01/CMakeLists.txt</code></pre></div><p data-pid="sf5CGR2p">.\Debug\testprj.exe</p><div class="highlight"><pre><code class="language-text">PS D:\work\hdf5_work\ModernHDF5\codes\HDF5Examples\H5T\h5ex_t_int\01\build&gt; .\Debug\testprj.exe
DS1:
 [   0  -1  -2  -3  -4  -5  -6]
 [   0   0   0   0   0   0   0]
 [   0   1   2   3   4   5   6]
 [   0   2   4   6   8  10  12]</code></pre></div><p data-pid="3w5lyPnE">使用HDFViewApp-3.2.0打开h5ex_t_int.h5文件</p><p data-pid="qmSALhZb">有：</p><figure data-size="normal"><img src="https://pic3.zhimg.com/v2-c6ee9c4be038f4e0c13cf267939fb692_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="851" data-rawheight="487" class="origin_image zh-lightbox-thumb" data-original="https://pic3.zhimg.com/v2-c6ee9c4be038f4e0c13cf267939fb692_r.jpg" referrerpolicy="no-referrer"></figure><p data-pid="MzcK3FYZ">代码上传至：</p><a href="https://github.com/eric2003/ModernHDF5/tree/main/codes/HDF5Examples/H5T/h5ex_t_int/01" data-draft-node="block" data-draft-type="link-card" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">github.com/eric2003/Mod</span><span class="invisible">ernHDF5/tree/main/codes/HDF5Examples/H5T/h5ex_t_int/01</span><span class="ellipsis"></span></a><p data-pid="15erB56X">为便于检索，文章收录于：</p><a href="https://zhuanlan.zhihu.com/p/452874893" data-draft-node="block" data-draft-type="link-card" class="internal">迦非喵：CGNS和hdf5编译链接相关文章链接整理（不定期更新）</a><p></p>
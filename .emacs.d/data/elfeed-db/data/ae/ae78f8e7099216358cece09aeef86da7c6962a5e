<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MySQL-InnoDB-Cluster">MySQL InnoDB Cluster</h2><h3 id="简介">简介</h3><p>MySQL 的一种高可用方案，具体实现方式参见下图：</p><p><img src="https://dev.mysql.com/doc/mysql-shell/8.4/en/images/innodb-cluster-overview.png" alt="MySQL InnoDB Cluster"></p><h3 id="服务部署">服务部署</h3><h4 id="容器版">容器版</h4><p>可以试用 <a href="https://github.com/neumayer/mysql-docker-compose-examples">mysql-docker-compose-examples</a> 项目。</p><blockquote><p>注：示例项目的 MySQL Router 只开放了 6446 端口，此端口仅供读写使用，还可以开放 6447 端口，此端口负责只读请求。</p></blockquote><h4 id="本地部署">本地部署</h4><blockquote><p>注：此处需要提前搭建好 MySQL 服务器，可以参照 MySQL 文档。</p></blockquote><p>使用如下命令进入交互式命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysqlsh<br></code></pre></td></tr></table></figure><p>使用如下命令即可链接到数据库，并将其初始化：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">shell.connect(&#x27;root@localhost:3306&#x27;)<br>dba.configureInstance()<br></code></pre></td></tr></table></figure><p>在所有节点被初始化完成后即可使用如下命令创建 InnoDB 集群：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">dba.createCluster(&#x27;devCluster&#x27;)<br></code></pre></td></tr></table></figure><p>然后使用如下命令添加实例至集群:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">dba.getCluster().addInstance(&#x27;root@mysql-2:3306&#x27;)<br></code></pre></td></tr></table></figure><blockquote><p>注：此处需要输入密码并选择恢复方式，建议在刚搭建的服务中采用 Clone 。配置完成后需要重启服务，如果使用容器记得配置持久卷。</p></blockquote><p>之后可以采用如下命令检查集群状态：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">dba.getCluster().status()<br></code></pre></td></tr></table></figure><h3 id="测试">测试</h3><h4 id="负载均衡">负载均衡</h4><p>使用如下命令安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install sqlalchemy mysql-connector-python<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sqlalchemy <span class="hljs-keyword">import</span> create_engine, text<br><span class="hljs-keyword">from</span> sqlalchemy.orm <span class="hljs-keyword">import</span> sessionmaker<br><br>DATABASE_URI = <span class="hljs-string">&#x27;mysql+mysqlconnector://root:mysql@localhost:6447&#x27;</span><br><br>engine = create_engine(<br>    DATABASE_URI,<br>    pool_size=<span class="hljs-number">10</span>,<br>    max_overflow=<span class="hljs-number">20</span>,<br>    pool_recycle=<span class="hljs-number">3600</span>,<br>    pool_pre_ping=<span class="hljs-literal">True</span><br>)<br><br>Session = sessionmaker(bind=engine)<br>session = Session()<br>query = text(<span class="hljs-string">&#x27;SELECT @@server_id as server_id&#x27;</span>)<br>result = session.execute(query).fetchone()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Server ID&quot;</span> + result[<span class="hljs-number">0</span>])<br>session.close()<br></code></pre></td></tr></table></figure><p>多次运行此服务即可看到，请求被传输到了不同的设备上执行。</p><h3 id="参考资料">参考资料</h3><p><a href="https://dev.mysql.com/doc/">MySQL 官方文档</a></p><p><a href="https://github.com/neumayer/mysql-docker-compose-examples">mysql-docker-compose-examples</a></p>
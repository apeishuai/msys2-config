<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Iridium-Short-Burst-Data">Iridium Short Burst Data</h2><h3 id="简介">简介</h3><p>Iridium Short Burst Data 是铱星的一种短报文，报文可以通过 DirectIP 方式或邮件的方式推送到客户侧。由于提供方并没有说明</p><h3 id="使用方式">使用方式</h3><p>如果需要使用 java 解析报文可以使用如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-keyword">import</span> java.nio.charset.StandardCharsets;<br><span class="hljs-keyword">import</span> java.util.Arrays;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Isbdmsg</span> &#123;<br><br>    <span class="hljs-keyword">private</span> String imei;<br>    <span class="hljs-keyword">private</span> String payload;<br>    <span class="hljs-keyword">private</span> Double lat;<br>    <span class="hljs-keyword">private</span> Double lon;<br>    <span class="hljs-keyword">private</span> Long cepRadius;<br>    <span class="hljs-keyword">private</span> Long timeOfSession;<br><br>    <span class="hljs-keyword">private</span> Long cdrRef;<br>    <span class="hljs-keyword">private</span> Integer momsn;<br>    <span class="hljs-keyword">private</span> Integer mtmsn;<br><br>    <span class="hljs-keyword">private</span> Boolean finish;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">Integer</span> <span class="hljs-variable">readBytes</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Isbdmsg</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data)</span> &#123;<br>        decodeFull(data);<br>        <span class="hljs-keyword">while</span> (readBytes &lt; data.length) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">iei</span> <span class="hljs-operator">=</span> data[readBytes];<br>            <span class="hljs-keyword">if</span> (iei == <span class="hljs-number">1</span>) &#123;<br>                decodeHeader(Arrays.copyOfRange(data, readBytes + <span class="hljs-number">1</span>, readBytes + <span class="hljs-number">31</span>));<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (iei == <span class="hljs-number">2</span>) &#123;<br>                decodePayload(data);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (iei == <span class="hljs-number">3</span>) &#123;<br>                decodeLocation(Arrays.copyOfRange(data, readBytes + <span class="hljs-number">1</span>, readBytes + <span class="hljs-number">14</span>));<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">decodeFull</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">protocolVersion</span> <span class="hljs-operator">=</span> data[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">if</span> (protocolVersion != <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;not a valid protocol version&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">overallMessageLen</span> <span class="hljs-operator">=</span> ((data[<span class="hljs-number">1</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) | (data[<span class="hljs-number">2</span>] &amp; <span class="hljs-number">0xFF</span>);<br>        <span class="hljs-keyword">if</span> (data.length != overallMessageLen + <span class="hljs-number">3</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;message incomplete&quot;</span>);<br>        &#125;<br>        <span class="hljs-built_in">this</span>.readBytes = <span class="hljs-built_in">this</span>.readBytes + <span class="hljs-number">3</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">decodeHeader</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">moHeaderLen</span> <span class="hljs-operator">=</span> ((data[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) | (data[<span class="hljs-number">1</span>] &amp; <span class="hljs-number">0xFF</span>);<br>        <span class="hljs-keyword">if</span> (moHeaderLen != <span class="hljs-number">28</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;not a valid moHeaderLen&quot;</span>);<br>        &#125;<br>        <span class="hljs-built_in">this</span>.cdrRef = ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">2</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">24</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">3</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">16</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">4</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">5</span>] &amp; <span class="hljs-number">0xFF</span>));<br>        <span class="hljs-built_in">this</span>.imei = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(Arrays.copyOfRange(data, <span class="hljs-number">6</span>, <span class="hljs-number">21</span>), StandardCharsets.UTF_8);<br>        <span class="hljs-built_in">this</span>.momsn = ((data[<span class="hljs-number">22</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) | (data[<span class="hljs-number">23</span>] &amp; <span class="hljs-number">0xFF</span>);<br>        <span class="hljs-built_in">this</span>.mtmsn = ((data[<span class="hljs-number">24</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) | (data[<span class="hljs-number">25</span>] &amp; <span class="hljs-number">0xFF</span>);<br>        <span class="hljs-built_in">this</span>.timeOfSession = ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">26</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">24</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">27</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">16</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">28</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">29</span>] &amp; <span class="hljs-number">0xFF</span>));<br>        <span class="hljs-built_in">this</span>.readBytes = <span class="hljs-built_in">this</span>.readBytes + <span class="hljs-number">31</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">decodeLocation</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">moLocationLen</span> <span class="hljs-operator">=</span> ((data[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) | (data[<span class="hljs-number">1</span>] &amp; <span class="hljs-number">0xFF</span>);<br>        <span class="hljs-keyword">if</span> (moLocationLen != <span class="hljs-number">11</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;not a valid moHeaderLen&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">nsi</span> <span class="hljs-operator">=</span> getValueAtIndex(data[<span class="hljs-number">2</span>], <span class="hljs-number">1</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">ewi</span> <span class="hljs-operator">=</span> getValueAtIndex(data[<span class="hljs-number">2</span>], <span class="hljs-number">0</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">latitudeDegrees</span> <span class="hljs-operator">=</span> data[<span class="hljs-number">3</span>];<br>        <span class="hljs-type">double</span> <span class="hljs-variable">latitudeMinute</span> <span class="hljs-operator">=</span> convertToDecimal(data[<span class="hljs-number">4</span>], data[<span class="hljs-number">5</span>]);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">longitudeDegrees</span> <span class="hljs-operator">=</span> data[<span class="hljs-number">6</span>];<br>        <span class="hljs-type">double</span> <span class="hljs-variable">longitudeMinute</span> <span class="hljs-operator">=</span> convertToDecimal(data[<span class="hljs-number">7</span>], data[<span class="hljs-number">8</span>]);<br>        <span class="hljs-built_in">this</span>.lat = withSigns(ewi, latitudeDegrees + convertToDegrees(latitudeMinute));<br>        <span class="hljs-built_in">this</span>.lon = withSigns(nsi, longitudeDegrees + convertToDegrees(longitudeMinute));<br>        <span class="hljs-built_in">this</span>.cepRadius = ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">9</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">24</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">10</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">16</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">11</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) |<br>                ((<span class="hljs-type">long</span>) (data[<span class="hljs-number">12</span>] &amp; <span class="hljs-number">0xFF</span>));<br>        <span class="hljs-built_in">this</span>.readBytes = <span class="hljs-built_in">this</span>.readBytes + <span class="hljs-number">14</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-title function_">convertToDecimal</span><span class="hljs-params">(<span class="hljs-type">byte</span> msByte, <span class="hljs-type">byte</span> lsByte)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">thousandths</span> <span class="hljs-operator">=</span> (msByte &lt;&lt; <span class="hljs-number">8</span>) | lsByte;<br>        <span class="hljs-keyword">return</span> thousandths / <span class="hljs-number">1000.0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-title function_">convertToDegrees</span><span class="hljs-params">(<span class="hljs-type">double</span> decimal)</span> &#123;<br>        <span class="hljs-keyword">return</span> decimal / <span class="hljs-number">60.0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getValueAtIndex</span><span class="hljs-params">(<span class="hljs-type">byte</span> b, <span class="hljs-type">int</span> index)</span> &#123;<br>        <span class="hljs-keyword">if</span> (index &lt; <span class="hljs-number">0</span> || index &gt;= <span class="hljs-number">8</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;Index out of range&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> (b &gt;&gt; index) &amp; <span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-title function_">withSigns</span><span class="hljs-params">(<span class="hljs-type">int</span> i, <span class="hljs-type">double</span> number)</span> &#123;<br>        <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> number;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> - number;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">decodePayload</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">moPayloadLen</span> <span class="hljs-operator">=</span> ((data[readBytes + <span class="hljs-number">1</span>] &amp; <span class="hljs-number">0xFF</span>) &lt;&lt; <span class="hljs-number">8</span>) | (data[readBytes + <span class="hljs-number">2</span>] &amp; <span class="hljs-number">0xFF</span>);<br>        <span class="hljs-built_in">this</span>.payload = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(Arrays.copyOfRange(data, readBytes + <span class="hljs-number">3</span>, readBytes + <span class="hljs-number">3</span> + moPayloadLen));<br>        <span class="hljs-built_in">this</span>.finish = <span class="hljs-literal">true</span>;<br>        <span class="hljs-built_in">this</span>.readBytes = readBytes + <span class="hljs-number">3</span> + moPayloadLen;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>并如下改动 netty 接收代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> io.netty.buffer.ByteBuf;<br><span class="hljs-keyword">import</span> io.netty.channel.ChannelHandler;<br><span class="hljs-keyword">import</span> io.netty.channel.ChannelHandlerContext;<br><span class="hljs-keyword">import</span> io.netty.channel.ChannelInboundHandlerAdapter;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@ChannelHandler</span>.Sharable<br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DiscardServerHandler</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ChannelInboundHandlerAdapter</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">channelRead</span><span class="hljs-params">(ChannelHandlerContext ctx, Object msg)</span> &#123;<br>        <span class="hljs-type">ByteBuf</span> <span class="hljs-variable">buf</span> <span class="hljs-operator">=</span> (ByteBuf) msg;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">byte</span>[] receivedData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[buf.readableBytes()];<br>            buf.readBytes(receivedData);<br>            <span class="hljs-type">Isbdmsg</span> <span class="hljs-variable">isbdmsg</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Isbdmsg</span>(receivedData);<br>            log.info(isbdmsg.getImei() + <span class="hljs-string">&quot;: &quot;</span> + isbdmsg.getPayload());<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">if</span> (buf != <span class="hljs-literal">null</span>) &#123;<br>                buf.release();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">exceptionCaught</span><span class="hljs-params">(ChannelHandlerContext ctx, Throwable cause)</span> &#123;<br>        log.error(<span class="hljs-string">&quot;server error: &quot;</span> + cause.getMessage());<br>        ctx.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="参考资料">参考资料</h3><p><a href="https://apollosat.com/docs/directip-sbd-information/">DIRECTIP SBD INFORMATION</a></p>
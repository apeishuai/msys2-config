<p>这是一个为了一盘醋包了一盘饺子的故事</p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>熟悉我的朋友都知道，我是个 SRE，啊，不是，书接上回，大家都知道我在六月上旬的时候，家里的 HomeLab 来了一次全新的调整。</p><p>整体的效果如下</p><p><img src="https://github.com/Zheaoli/zheaoli.github.io/assets/7054676/7135cd07-6391-4eab-829a-8fbc11565d3c" alt="机柜"></p><p><img src="https://github.com/Zheaoli/zheaoli.github.io/assets/7054676/91030573-8562-42da-a8f3-d6daf9e95947" alt="网络拓扑"></p><p><img src="https://github.com/Zheaoli/zheaoli.github.io/assets/7054676/7b57634d-acae-4e7e-a2c6-3aaf9a4ac93e" alt="家里的 VM"></p><p>现在我大概的设备如下</p><ol><li>三台 NUC （两台 Intel NUC，一台零刻 NUC），单 2.5G 口，上面跑了一个 PVE 集群，开启了一堆虚拟机</li><li>一台新入的 2.5G * 4 的小主机，上面单独跑了一个 PVE，PVE 上承载了一个 OpenWRT，做了硬件直通</li><li>UDM-SE 作为我的主路由，负责控制 DHCP ，VLAN SSID 等 AC 功能</li><li>一个 2.5G*12 + 1G*12 的 24 口交换机</li><li>一个群晖 DS1821+，上面跑了一些媒体服务</li></ol><p>同时，因为我发现 VM 管理很麻烦，所以我在10月底，将 K3S 引入了我的 Homelab 中，具体的结构如下</p><ol><li>三台物理 NUC 抽出6个 VM</li><li>每个物理 NUC 上面跑一个 K3S Master + K3S Agent</li></ol><p>这样算是做了个最基本使用的环境（后续可能会再如几个 NUC 作为一些特殊的节点）</p><p>差不多 v1 状态介绍完了，那么接下来，我来介绍下 v2 的改造</p><h2 id="V2-启动"><a href="#V2-启动" class="headerlink" title="V2 启动"></a>V2 启动</h2><p>我最近在做一些 Redis 迁移的工具，所以我想常态化的在集群里跑一个 Redis Cluster。基础的技术方案很简单 <a href="https://github.com/bitnami/charts/blob/main/bitnami/redis-cluster/README.md">redis-cluster helm charts</a> 不就完了嘛。</p><p>但是问题出现在，我想在集群外访问这个 Redis Cluster，那么这就有点麻烦了。因为自建集群存在一个问题是需要一个 External-IP 作为入口。在云厂商托管的 K8S 中，这一切都很简单。但是在自己的 Homelab 中就需要别的技术方案了。</p><p>调研了一圈，发现 <a href="https://metallb.universe.tf/">MetalLb</a> 将会是一个不错的选择。</p><ol><li>安装简单，开箱即用</li><li>支持 L2 和 BGP 两种模式</li></ol><p>那么就，安装一下？这里又有一个当时觉得头疼的地方，因为我用的主路由 UDM-SE 不支持 BGP，所以我只能选择 L2 模式。那么就配置一下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">metallb.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IPAddressPool</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">first-pool</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">metallb-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">addresses:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span><span class="number">-192.168</span><span class="number">.20</span><span class="number">.250</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">metallb.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">L2Advertisement</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">metallb-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ipAddressPools:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">first-pool</span></span><br></pre></td></tr></table></figure><p>然后我的 Service 就能成功的分配到可以访问的 IP 了。一切看起来很好对不对？很明显不是啊！</p><p>说到不足就需要来先聊一下 MetalLB 的 L2 是怎么做的。它在每个节点上都会启动一个 Speaker 的 DaemonSet，会将你 SVC 被分配的 IP 和 MAC 地址走 ARP 宣告出去（IPV6 走 NDP）。那么这样做有几个问题</p><ol><li>同一时刻只能有一个节点的 Speaker 宣告这个 IP，如果这个节点挂了，MetalLB 基于 Hashicorp 的 <a href="https://github.com/hashicorp/memberlist">memberlist</a> 做的 failover 会有数十秒的延迟</li><li>让你的局域网变得 dirty（占用了局域网的一个 IP Range）</li></ol><p>这合理吗？这不合理啊。这清真吗，当然不清真啊。那么咋整啊，如果想换成 BGP 的话。</p><p>前面我说了<strong>我用的主路由 UDM-SE 不支持 BGP，所以我只能选择 L2 模式。</strong> 对吧。但是仔细思考之后，事情好像起了那么一些变化？</p><p>是这样，目前我的主路由只会作为最上层的网关，而我大部分设备的 Gateway 是通过 DHCP 下发的配置指向了我的 OpenWRT 实例，那么这样说的话，我好像在 OpenWRT 上做 BGP 支持就可以了？Exactly！</p><p>我把我定制的固件 <a href="https://github.com/Zheaoli/Auto-OpenWrt">Auto-OpenWRT</a> 添加了 <code>quagga</code> 相关的包后，编译，替换虚拟机镜像。然后开始进入我们的配置流程。</p><p>先看下 OpenWRT 的配置(ssh 到 OpenWRT 上，利用 vtysh 进行配置)</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">router bgp 65000</span><br><span class="line">bgp router-id 192.168.5.1</span><br><span class="line">neighbor 192.168.12.11 remote-as 65009</span><br><span class="line">neighbor 192.168.12.11 description &quot;k3s-master-1&quot;</span><br><span class="line">neighbor 192.168.12.12 remote-as 65009</span><br><span class="line">neighbor 192.168.12.12 description &quot;k3s-node-1&quot;</span><br><span class="line">neighbor 192.168.12.13 remote-as 65009</span><br><span class="line">neighbor 192.168.12.13 description &quot;k3s-node-2&quot;</span><br><span class="line">neighbor 192.168.12.14 remote-as 65009</span><br><span class="line">neighbor 192.168.12.14 description &quot;k3s-node-3&quot;</span><br><span class="line">neighbor 192.168.12.15 remote-as 65009</span><br><span class="line">neighbor 192.168.12.15 description &quot;k3s-node-4</span><br><span class="line">neighbor 192.168.12.16 remote-as 65009</span><br><span class="line">neighbor 192.168.12.16 description &quot;k3s-node-5&quot;</span><br></pre></td></tr></table></figure><p>这里我将 OpenWRT 的 BGP AS 设置为 65000，然后将 K3S 的 BGP AS 设置为 65009。</p><p>然后我们对 K3S 的配置进行修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">metallb.io/v1beta2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">BGPPeer</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">bgp-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">metallb-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">myASN:</span> <span class="number">65009</span></span><br><span class="line">  <span class="attr">peerASN:</span> <span class="number">65000</span></span><br><span class="line">  <span class="attr">peerAddress:</span> <span class="number">192.168</span><span class="number">.5</span><span class="number">.1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">metallb.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">IPAddressPool</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">first-pool</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">metallb-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">addresses:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.47</span><span class="number">.40</span><span class="number">.1</span><span class="string">/24</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">metallb.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">BGPAdvertisement</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">metallb-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ipAddressPools:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">first-pool</span></span><br></pre></td></tr></table></figure><p>OK, 回来看下我们的 OpenWRT 的一些结果</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">OpenWrt# show ip bgp summary</span><br><span class="line">BGP router identifier 192.168.5.1, local AS number 65000</span><br><span class="line">RIB entries 13, using 1456 bytes of memory</span><br><span class="line">Peers 6, using 53 KiB of memory</span><br><span class="line"></span><br><span class="line">Neighbor        V         AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd</span><br><span class="line">192.168.12.11   4 65009      12       9        0    0    0 00:02:43        7</span><br><span class="line">192.168.12.12   4 65009      12       8        0    0    0 00:02:54        7</span><br><span class="line">192.168.12.13   4 65009      12       9        0    0    0 00:02:49        7</span><br><span class="line">192.168.12.14   4 65009      12       9        0    0    0 00:02:53        7</span><br><span class="line">192.168.12.15   4 65009      12       9        0    0    0 00:02:46        7</span><br><span class="line">192.168.12.16   4 65009      12       9        0    0    0 00:02:44        7</span><br><span class="line"></span><br><span class="line">Total number of neighbors 6</span><br></pre></td></tr></table></figure><p>Right，Neighbor 成功建立，然后我们创建几个 LoadBalancer SVC 看一下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">NAME                          TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)                          AGE</span><br><span class="line">shake-test-cluster            ClusterIP      10.43.135.231   &lt;none&gt;        6379/TCP                         2d19h</span><br><span class="line">shake-test-cluster-0-svc      LoadBalancer   10.43.51.216    10.47.40.0    6379:32530/TCP,16379:30502/TCP   38h</span><br><span class="line">shake-test-cluster-1-svc      LoadBalancer   10.43.131.210   10.47.40.1    6379:32576/TCP,16379:31528/TCP   38h</span><br><span class="line">shake-test-cluster-2-svc      LoadBalancer   10.43.255.193   10.47.40.2    6379:31159/TCP,16379:30952/TCP   38h</span><br><span class="line">shake-test-cluster-3-svc      LoadBalancer   10.43.208.189   10.47.40.3    6379:30919/TCP,16379:32387/TCP   38h</span><br><span class="line">shake-test-cluster-4-svc      LoadBalancer   10.43.138.170   10.47.40.5    6379:31628/TCP,16379:31405/TCP   38h</span><br><span class="line">shake-test-cluster-5-svc      LoadBalancer   10.43.21.204    10.47.40.6    6379:32273/TCP,16379:30076/TCP   38h</span><br></pre></td></tr></table></figure><p>OK 分配了一些 VIP，我们再来看下 OpenWRT 的 BGP 路由表</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">OpenWrt# show ip bgp</span><br><span class="line"></span><br><span class="line">   Network          Next Hop            Metric LocPrf Weight Path</span><br><span class="line">*  10.47.40.0/32    192.168.12.11                          0 65009 i</span><br><span class="line">*                   192.168.12.16                          0 65009 i</span><br><span class="line">*                   192.168.12.15                          0 65009 i</span><br><span class="line">*                   192.168.12.13                          0 65009 i</span><br><span class="line">*                   192.168.12.14                          0 65009 i</span><br><span class="line">*&gt;                  192.168.12.12                          0 65009 i</span><br><span class="line">*  10.47.40.1/32    192.168.12.11                          0 65009 i</span><br><span class="line">*                   192.168.12.16                          0 65009 i</span><br><span class="line">*                   192.168.12.15                          0 65009 i</span><br><span class="line">*                   192.168.12.13                          0 65009 i</span><br><span class="line">*                   192.168.12.14                          0 65009 i</span><br><span class="line">*&gt;                  192.168.12.12                          0 65009 i</span><br><span class="line">*  10.47.40.2/32    192.168.12.11                          0 65009 i</span><br><span class="line">*                   192.168.12.16                          0 65009 i</span><br><span class="line">*                   192.168.12.15                          0 65009 i</span><br><span class="line">*                   192.168.12.13                          0 65009 i</span><br><span class="line">*                   192.168.12.14                          0 65009 i</span><br><span class="line">*&gt;                  192.168.12.12                          0 65009 i</span><br><span class="line">*  10.47.40.3/32    192.168.12.11                          0 65009 i</span><br><span class="line">*                   192.168.12.16                          0 65009 i</span><br><span class="line">*                   192.168.12.15                          0 65009 i</span><br><span class="line">*                   192.168.12.13                          0 65009 i</span><br><span class="line">*                   192.168.12.14                          0 65009 i</span><br><span class="line">*&gt;                  192.168.12.12                          0 65009 i</span><br><span class="line">*  10.47.40.4/32    192.168.12.11                          0 65009 i</span><br><span class="line">*                   192.168.12.16                          0 65009 i</span><br><span class="line">*                   192.168.12.15                          0 65009 i</span><br><span class="line">*                   192.168.12.13                          0 65009 i</span><br><span class="line">*                   192.168.12.14                          0 65009 i</span><br><span class="line">*&gt;                  192.168.12.12                          0 65009 i</span><br><span class="line">*  10.47.40.5/32    192.168.12.11                          0 65009 i</span><br><span class="line">*                   192.168.12.16                          0 65009 i</span><br><span class="line">*                   192.168.12.15                          0 65009 i</span><br><span class="line">*                   192.168.12.13                          0 65009 i</span><br><span class="line">*                   192.168.12.14                          0 65009 i</span><br><span class="line">*&gt;                  192.168.12.12                          0 65009 i</span><br><span class="line">*  10.47.40.6/32    192.168.12.11                          0 65009 i</span><br><span class="line">*                   192.168.12.16                          0 65009 i</span><br><span class="line">*                   192.168.12.15                          0 65009 i</span><br><span class="line">*                   192.168.12.13                          0 65009 i</span><br><span class="line">*                   192.168.12.14                          0 65009 i</span><br><span class="line">*&gt;                  192.168.12.12                          0 65009 i</span><br></pre></td></tr></table></figure><p>很好，我们的路由表里面已经有了我们的 VIP，以及 Next Hop，当某个节点发生故障的时候，OpenWRT 会自动将路由表更新，然后将流量转发到其他节点上。</p><p>那么 SVC 的需求算是告一段落了，这算本次升级的结束了吗？</p><p>当然不是。</p><p>在完成 BGP 后，OpenWRT 将会承担更多的任务。我现在的方式是，有一个一模一样的备机在旁边，当主机挂了的时候，我需要手动切换到备机上。这样的话，我就需要一个自动化的方案。</p><p>那么这个方案就是 <a href="https://en.wikipedia.org/wiki/Virtual_Router_Redundancy_Protocol">VRRP</a>。这个协议的原理很简单，就是在两台机器上都跑一个 VRRP 的 Daemon，然后通过一个 Virtual IP 来进行访问。当主机挂了的时候，备机会接管这个 Virtual IP。</p><p>在 OpenWRT 上，我们可以通过 <code>keepalived</code> 来实现这个功能。我们先来看下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP #默认的主节点值为 MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 10</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;        </span><br><span class="line">        192.168.5.1/16 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们将 Virtual IP 设置为 192.168.5.1，而背后的四个节点为</p><ul><li>192.168.5.2</li><li>192.168.5.3</li><li>192.168.5.4</li><li>192.168.5.5</li></ul><p>其中 192.168.5.2 为主节点，这四个 OpenWRT 都在我四个 NUC 机器上，确保一个硬件挂了其余的节点可以接管。</p><p>我们来测试下，先下线 192.168.5.2</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Thu Dec 28 20:14:52 2023 daemon.info Keepalived_vrrp[13785]: (VI_1) Entering MASTER STATE</span><br><span class="line">Thu Dec 28 20:14:52 2023 daemon.info avahi-daemon[2902]: Registering new address record for 192.168.5.1 on eth0.IPv4.</span><br><span class="line">Thu Dec 28 20:14:52 2023 daemon.info Keepalived_vrrp[13785]: (VI_1) Master received advert from 192.168.5.5 with same priority 10 but higher IP address than ours</span><br><span class="line">Thu Dec 28 20:14:52 2023 daemon.info Keepalived_vrrp[13785]: (VI_1) Entering BACKUP STATE</span><br><span class="line">Thu Dec 28 20:14:52 2023 daemon.info avahi-daemon[2902]: Withdrawing address record for 192.168.5.1 on eth0.</span><br></pre></td></tr></table></figure><p>我们能看到主节点已经切换到了 192.168.5.5 上了，然后我们再上线</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Thu Dec 28 20:26:22 2023 daemon.info Keepalived_vrrp[3000]: (VI_1) Master received advert from 192.168.5.2 with higher priority 100, ours 10</span><br><span class="line">Thu Dec 28 20:26:22 2023 daemon.info Keepalived_vrrp[3000]: (VI_1) Entering BACKUP STATE</span><br><span class="line">Thu Dec 28 20:26:22 2023 daemon.info avahi-daemon[2909]: Withdrawing address record for 192.168.5.1 on eth0.</span><br><span class="line">Thu Dec 28 20:26:22 2023 daemon.notice ttyd[7586]: [2023/12/28 20:26:22:2320] N: rops_handle_POLLIN_netlink: DELADDR</span><br></pre></td></tr></table></figure><p>我们能看到，主节点也已经切换回了</p><p>现在算是终于做到了基础的 HA 了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次升级主要还是以软件升级为主，希望能尽可能体验和云上一致。同时保持基础的 HA</p><p>下一步的迭代计划是（我自己想的）：</p><ol><li>可以尝试做更多路由的骚操作，比如 DSR</li><li>可以添置新的一些交换机，尝试 RDMA 之类的好玩的东西</li></ol><p>差不多就这样把</p>
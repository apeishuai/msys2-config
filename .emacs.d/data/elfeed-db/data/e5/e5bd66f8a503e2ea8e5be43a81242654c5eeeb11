<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Spring-MQTT">Spring MQTT</h2><h3 id="简介">简介</h3><p>Spring 提供了 Message Queueing Telemetry Transport(MQTT) 协议的插件。</p><h3 id="搭建环境">搭建环境</h3><p>编写配置文件 <code>config/mosquitto.conf</code> ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">listener 1883<br>allow_anonymous true<br></code></pre></td></tr></table></figure><p>编写 <code>docker-compose.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">mqtt-broker:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">eclipse-mosquitto:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mqtt-broker</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;1883:1883&quot;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;9001:9001&quot;</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./config:/mosquitto/config</span><br></code></pre></td></tr></table></figure><h3 id="使用">使用</h3><p>安装依赖(maven)：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.integration<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-integration-mqtt<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>6.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>安装依赖(gradle)：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs groovy">compile <span class="hljs-string">&quot;org.springframework.integration:spring-integration-mqtt:6.3.1&quot;</span><br></code></pre></td></tr></table></figure><p>编写配置类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.eclipse.paho.client.mqttv3.MqttConnectOptions;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.integration.annotation.ServiceActivator;<br><span class="hljs-keyword">import</span> org.springframework.integration.channel.DirectChannel;<br><span class="hljs-keyword">import</span> org.springframework.integration.core.MessageProducer;<br><span class="hljs-keyword">import</span> org.springframework.integration.mqtt.core.DefaultMqttPahoClientFactory;<br><span class="hljs-keyword">import</span> org.springframework.integration.mqtt.core.MqttPahoClientFactory;<br><span class="hljs-keyword">import</span> org.springframework.integration.mqtt.inbound.MqttPahoMessageDrivenChannelAdapter;<br><span class="hljs-keyword">import</span> org.springframework.integration.mqtt.outbound.MqttPahoMessageHandler;<br><span class="hljs-keyword">import</span> org.springframework.integration.mqtt.support.DefaultPahoMessageConverter;<br><span class="hljs-keyword">import</span> org.springframework.messaging.MessageChannel;<br><span class="hljs-keyword">import</span> org.springframework.messaging.MessageHandler;<br><span class="hljs-keyword">import</span> org.springframework.integration.annotation.MessagingGateway;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MqttConfig</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MqttPahoClientFactory <span class="hljs-title function_">mqttClientFactory</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">DefaultMqttPahoClientFactory</span> <span class="hljs-variable">factory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultMqttPahoClientFactory</span>();<br>        <span class="hljs-type">MqttConnectOptions</span> <span class="hljs-variable">options</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MqttConnectOptions</span>();<br>        options.setServerURIs(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[] &#123; <span class="hljs-string">&quot;tcp://192.168.2.235:1883&quot;</span>&#125;);<br><span class="hljs-comment">//        options.setUserName(&quot;username&quot;);</span><br><span class="hljs-comment">//        options.setPassword(&quot;password&quot;.toCharArray());</span><br>        factory.setConnectionOptions(options);<br>        <span class="hljs-keyword">return</span> factory;<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-meta">@ServiceActivator(inputChannel = &quot;mqttOutboundChannel&quot;)</span><br>    <span class="hljs-keyword">public</span> MessageHandler <span class="hljs-title function_">mqttOutbound</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MqttPahoMessageHandler</span> <span class="hljs-variable">messageHandler</span> <span class="hljs-operator">=</span><br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">MqttPahoMessageHandler</span>(<span class="hljs-string">&quot;writeClient&quot;</span>, mqttClientFactory());<br>        messageHandler.setAsync(<span class="hljs-literal">true</span>);<br>        messageHandler.setDefaultTopic(<span class="hljs-string">&quot;topic1&quot;</span>);<br>        <span class="hljs-keyword">return</span> messageHandler;<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MessageChannel <span class="hljs-title function_">mqttOutboundChannel</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DirectChannel</span>();<br>    &#125;<br><br>    <span class="hljs-meta">@MessagingGateway(defaultRequestChannel = &quot;mqttOutboundChannel&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">MyGateway</span> &#123;<br>        <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendToMqtt</span><span class="hljs-params">(String data)</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MessageChannel <span class="hljs-title function_">mqttInputChannel</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DirectChannel</span>();<br>    &#125;<br><br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MessageProducer <span class="hljs-title function_">inbound</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MqttPahoMessageDrivenChannelAdapter</span> <span class="hljs-variable">adapter</span> <span class="hljs-operator">=</span><br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">MqttPahoMessageDrivenChannelAdapter</span>(<span class="hljs-string">&quot;readClient&quot;</span>, mqttClientFactory(),<br>                        <span class="hljs-string">&quot;topic1&quot;</span>);<br>        adapter.setCompletionTimeout(<span class="hljs-number">5000</span>);<br>        adapter.setConverter(<span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultPahoMessageConverter</span>());<br>        adapter.setQos(<span class="hljs-number">1</span>);<br>        adapter.setOutputChannel(mqttInputChannel());<br>        <span class="hljs-keyword">return</span> adapter;<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-meta">@ServiceActivator(inputChannel = &quot;mqttInputChannel&quot;)</span><br>    <span class="hljs-keyword">public</span> MessageHandler <span class="hljs-title function_">handler</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> message -&gt; System.out.println(message.getPayload() + <span class="hljs-string">&quot; message received&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>编写测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> jakarta.annotation.Resource;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/test&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestController</span> &#123;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> MqttConfig.MyGateway myGateway;<br><br>    <span class="hljs-meta">@GetMapping</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">test</span><span class="hljs-params">()</span> &#123;<br>        myGateway.sendToMqtt(<span class="hljs-string">&quot;wqnice&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;ok&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="参考资料">参考资料</h3><p><a href="https://docs.spring.io/spring-integration/reference/mqtt.html">官方文档</a></p>